#Null properties not included in REST API JSON
spring.jackson.default-property-inclusion=non_null
spring.jackson.serialization.indent_output=true
#let's try to be strict
spring.jackson.deserialization.fail_on_unknown_properties=true

#Make Spring throw 404 for unknown paths (but we had to disable mapping to static resources, apart from swagger)
#404 will be handled uniformly in CustomErrorHandler advice
spring.mvc.throw-exception-if-no-handler-found=true
spring.mvc.static-path-pattern=/swagger-ui.html
#spring.resources.add-mappings=false
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.main.allow-bean-definition-overriding=true

#to make spring boot work behind a reverse proxy
server.use-forward-headers=true

#OAuth2 - userinfo endpoint. Used to both validate access token and retrieve user info (groupNames in particular)
security.oauth2.resource.user-info-uri=https://login.elixir-czech.org/oidc/userinfo

tesk.api.k8s.namespace=default

tesk.api.taskmaster.image-name=eu.gcr.io/tes-wes/taskmaster
tesk.api.taskmaster.image-version=v0.10.0
tesk.api.taskmaster.filer-image-name=eu.gcr.io/tes-wes/filer
tesk.api.taskmaster.filer-image-version=v0.10.0
tesk.api.taskmaster.ftp.secret-name=
tesk.api.taskmaster.service-account-name=default
tesk.api.taskmaster.debug=false

tesk.api.taskmaster.executor-secret.name=
tesk.api.taskmaster.executor-secret.mount-path=/secret

spring.profiles.active=noauth
#group authorisation settings
tesk.api.authorisation.groups-claim=eduperson_entitlement
tesk.api.authorisation.delimiter=:
tesk.api.authorisation.group-prefix=urn:geant:elixir-europe.org:group:elixir:
tesk.api.authorisation.group-suffix=#perun.elixir-czech.cz
tesk.api.authorisation.parent-group=GA4GH:GA4GH-CAP
tesk.api.authorisation.env-subgroup=EBI
tesk.api.authorisation.base-group=${tesk.api.authorisation.parent-group}${tesk.api.authorisation.delimiter}${tesk.api.authorisation.env-subgroup}
tesk.api.authorisation.admin-subgroup=ADMIN
tesk.api.authorisation.base-group-nosuffix=${tesk.api.authorisation.group-prefix}${tesk.api.authorisation.base-group}
tesk.api.authorisation.base-group-prefix=${tesk.api.authorisation.base-group-nosuffix}${tesk.api.authorisation.delimiter}
tesk.api.authorisation.base-group-full=${tesk.api.authorisation.base-group-nosuffix}${tesk.api.authorisation.group-suffix}
tesk.api.authorisation.admin-group-full=${tesk.api.authorisation.base-group-prefix}${tesk.api.authorisation.admin-subgroup}${tesk.api.authorisation.group-suffix}

tesk.api.authorisation.admin-subgroup-suffix=${tesk.api.authorisation.delimiter}${tesk.api.authorisation.admin-subgroup}
#server.port=8082

#swagger OAuth2 client settings (we will use custom params - defining OAuth2 standard params may trigger autoconfiguration of things we don't want
tesk.api.swagger-oauth.implicit=true
tesk.api.swagger-oauth.authorization-endpoint=https://login.elixir-czech.org/oidc/authorize
tesk.api.swagger-oauth.token-endpoint=https://login.elixir-czech.org/oidc/token
tesk.api.swagger-oauth.client-id=changeme
tesk.api.swagger-oauth.client-secret=changeme
tesk.api.swagger-oauth.scopes=openid:Standard openid,${tesk.api.authorisation.groups-claim}:Access to groups membership,profile:Identity info about user,email:Email

tesk.api.trs.uriPattern=trs://{host}/{id}/versions/{version}
tesk.api.trs.urlPattern=https://{host}/ga4gh/trs/v2/tools/{id}/versions/{version}

tesk.api.service-info.location=classpath:service-info.yaml
