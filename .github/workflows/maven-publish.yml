# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [ master ]
    tags: 
      - 'v[0-9]+\.[0-9]+\.[0-9]+'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v2
    - name: Get tags
      id: get_tag
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - run: |
        echo ${GITHUB_REF}
    # - name: Set up JDK 8
    #   uses: actions/setup-java@v2
    #   with:
    #     java-version: '8'
    #     distribution: 'temurin'
        
    # - name: Build with Maven
    #   run: ./mvnw clean verify

    # # Login against a Docker registry except on PR
    # # https://github.com/docker/login-action
    # - name: Log into registry
    #   uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Get current date
    #   id: date
    #   run: echo "::set-output name=date::$(date +'%Y%m%d%s')"


    # # Build and push Docker image with Buildx (don't push on PR)
    # # https://github.com/docker/build-push-action
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ secrets.DOCKER_REGISTRY }}/tesk-api:latest, ${{ secrets.DOCKER_REGISTRY }}/tesk-api:${{ steps.date.outputs.date }}
    
    
